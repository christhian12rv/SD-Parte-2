# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import PortalBiblioteca_pb2 as PortalBiblioteca__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in PortalBiblioteca_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PortalBibliotecaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RealizaEmprestimo = channel.stream_unary(
                '/biblioteca.PortalBiblioteca/RealizaEmprestimo',
                request_serializer=PortalBiblioteca__pb2.UsuarioLivro.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Status.FromString,
                _registered_method=True)
        self.RealizaDevolucao = channel.stream_unary(
                '/biblioteca.PortalBiblioteca/RealizaDevolucao',
                request_serializer=PortalBiblioteca__pb2.UsuarioLivro.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Status.FromString,
                _registered_method=True)
        self.BloqueiaUsuarios = channel.unary_unary(
                '/biblioteca.PortalBiblioteca/BloqueiaUsuarios',
                request_serializer=PortalBiblioteca__pb2.Vazia.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Status.FromString,
                _registered_method=True)
        self.LiberaUsuarios = channel.unary_unary(
                '/biblioteca.PortalBiblioteca/LiberaUsuarios',
                request_serializer=PortalBiblioteca__pb2.Vazia.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Status.FromString,
                _registered_method=True)
        self.ListaUsuariosBloqueados = channel.unary_stream(
                '/biblioteca.PortalBiblioteca/ListaUsuariosBloqueados',
                request_serializer=PortalBiblioteca__pb2.Vazia.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.UsuarioBloqueado.FromString,
                _registered_method=True)
        self.ListaLivrosEmprestados = channel.unary_stream(
                '/biblioteca.PortalBiblioteca/ListaLivrosEmprestados',
                request_serializer=PortalBiblioteca__pb2.Vazia.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Livro.FromString,
                _registered_method=True)
        self.ListaLivrosEmFalta = channel.unary_stream(
                '/biblioteca.PortalBiblioteca/ListaLivrosEmFalta',
                request_serializer=PortalBiblioteca__pb2.Vazia.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Livro.FromString,
                _registered_method=True)
        self.PesquisaLivro = channel.unary_stream(
                '/biblioteca.PortalBiblioteca/PesquisaLivro',
                request_serializer=PortalBiblioteca__pb2.Criterio.SerializeToString,
                response_deserializer=PortalBiblioteca__pb2.Livro.FromString,
                _registered_method=True)


class PortalBibliotecaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RealizaEmprestimo(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RealizaDevolucao(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BloqueiaUsuarios(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LiberaUsuarios(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListaUsuariosBloqueados(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListaLivrosEmprestados(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListaLivrosEmFalta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PesquisaLivro(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PortalBibliotecaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RealizaEmprestimo': grpc.stream_unary_rpc_method_handler(
                    servicer.RealizaEmprestimo,
                    request_deserializer=PortalBiblioteca__pb2.UsuarioLivro.FromString,
                    response_serializer=PortalBiblioteca__pb2.Status.SerializeToString,
            ),
            'RealizaDevolucao': grpc.stream_unary_rpc_method_handler(
                    servicer.RealizaDevolucao,
                    request_deserializer=PortalBiblioteca__pb2.UsuarioLivro.FromString,
                    response_serializer=PortalBiblioteca__pb2.Status.SerializeToString,
            ),
            'BloqueiaUsuarios': grpc.unary_unary_rpc_method_handler(
                    servicer.BloqueiaUsuarios,
                    request_deserializer=PortalBiblioteca__pb2.Vazia.FromString,
                    response_serializer=PortalBiblioteca__pb2.Status.SerializeToString,
            ),
            'LiberaUsuarios': grpc.unary_unary_rpc_method_handler(
                    servicer.LiberaUsuarios,
                    request_deserializer=PortalBiblioteca__pb2.Vazia.FromString,
                    response_serializer=PortalBiblioteca__pb2.Status.SerializeToString,
            ),
            'ListaUsuariosBloqueados': grpc.unary_stream_rpc_method_handler(
                    servicer.ListaUsuariosBloqueados,
                    request_deserializer=PortalBiblioteca__pb2.Vazia.FromString,
                    response_serializer=PortalBiblioteca__pb2.UsuarioBloqueado.SerializeToString,
            ),
            'ListaLivrosEmprestados': grpc.unary_stream_rpc_method_handler(
                    servicer.ListaLivrosEmprestados,
                    request_deserializer=PortalBiblioteca__pb2.Vazia.FromString,
                    response_serializer=PortalBiblioteca__pb2.Livro.SerializeToString,
            ),
            'ListaLivrosEmFalta': grpc.unary_stream_rpc_method_handler(
                    servicer.ListaLivrosEmFalta,
                    request_deserializer=PortalBiblioteca__pb2.Vazia.FromString,
                    response_serializer=PortalBiblioteca__pb2.Livro.SerializeToString,
            ),
            'PesquisaLivro': grpc.unary_stream_rpc_method_handler(
                    servicer.PesquisaLivro,
                    request_deserializer=PortalBiblioteca__pb2.Criterio.FromString,
                    response_serializer=PortalBiblioteca__pb2.Livro.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'biblioteca.PortalBiblioteca', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('biblioteca.PortalBiblioteca', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PortalBiblioteca(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RealizaEmprestimo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/biblioteca.PortalBiblioteca/RealizaEmprestimo',
            PortalBiblioteca__pb2.UsuarioLivro.SerializeToString,
            PortalBiblioteca__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RealizaDevolucao(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/biblioteca.PortalBiblioteca/RealizaDevolucao',
            PortalBiblioteca__pb2.UsuarioLivro.SerializeToString,
            PortalBiblioteca__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BloqueiaUsuarios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/biblioteca.PortalBiblioteca/BloqueiaUsuarios',
            PortalBiblioteca__pb2.Vazia.SerializeToString,
            PortalBiblioteca__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LiberaUsuarios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/biblioteca.PortalBiblioteca/LiberaUsuarios',
            PortalBiblioteca__pb2.Vazia.SerializeToString,
            PortalBiblioteca__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListaUsuariosBloqueados(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/biblioteca.PortalBiblioteca/ListaUsuariosBloqueados',
            PortalBiblioteca__pb2.Vazia.SerializeToString,
            PortalBiblioteca__pb2.UsuarioBloqueado.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListaLivrosEmprestados(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/biblioteca.PortalBiblioteca/ListaLivrosEmprestados',
            PortalBiblioteca__pb2.Vazia.SerializeToString,
            PortalBiblioteca__pb2.Livro.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListaLivrosEmFalta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/biblioteca.PortalBiblioteca/ListaLivrosEmFalta',
            PortalBiblioteca__pb2.Vazia.SerializeToString,
            PortalBiblioteca__pb2.Livro.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PesquisaLivro(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/biblioteca.PortalBiblioteca/PesquisaLivro',
            PortalBiblioteca__pb2.Criterio.SerializeToString,
            PortalBiblioteca__pb2.Livro.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
